approve: Approve {{_value:balance:tx.to}} {{tx.to}} tokens to {{_spender}}
transfer: Transfer {{_value:balance:tx.to}} {{tx.to}} tokens to {{_to}}
swapExactTokensForTokens: 'Sell {{amountIn:balance:path[0]}} {{path[0]}} to buy >= {{amountOutMin:balance:path[-1]}} {{path[-1]}}. Swap path: {{path:path}}'
swapExactTokensForETHSupportingFeeOnTransferTokens: 'Sell {{amountIn:balance:path[0]}} {{path[0]}} to buy >= {{amountOutMin:balance:path[-1]}} ETH. Swap path: {{path}}'
swapExactETHForTokens: 'Sell {{tx.value:balance:eth}} ETH to buy >= {{amountOutMin:balance:path[-1]}} {{path[-1]}}. Swap path: {{path}}'
swapExactETHForTokensSupportingFeeOnTransferTokens: 'Sell {{tx.value:balance:eth}} ETH to buy >= {{amountOutMin:balance:path[-1]}} {{path[-1]}}. Swap path: {{path}}'
setApprovalForAll: 'NFT ApproveForAll to {{operator}}: {{approved}}'
swap(string,address,uint256,bytes): "Metamask DEX: Sell {{amount}} {{tokenFrom}} with **{{aggregatorId}}**"
execTransaction((uint256,address,uint256,bytes,bytes,bytes)): CoboSafe call.
execTransactions((uint256,address,uint256,bytes,bytes,bytes)[]): CoboSafe multicall.
execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes): 'Calling Safe {Wallet} with mode: `{{operation:names:[[0,"call"],[1,"delegatecall"]]}}`'
handleOps: "ERC4337 Entrypoint handles {{ops.length}} UserOperation(s)."
executeAndRevert(address,uint256,bytes,uint8): 'Calling Safe-style ERC-4337 smart wallet, mode: `{{operation:names:[[0,"call"],[1,"delegatecall"]]}}`'
multiSend(bytes): Safe multiSend call.
